<macros>
    <xml name="refGenomeSourceConditional">
        <conditional name="source">
            <param label="Choose the source for the reference genome" name="index_source" type="select">
                <option value="cached">Use a built-in genome</option>
                <option value="history">Use a genome from the history</option>
            </param>
            <when value="cached">
                <param name="reference" type="select" label="Using reference genome" help="Select genome from the list">
                    <options from_data_table="picard_indexes">
                        <filter type="sort_by" column="2" />
                        <validator type="no_options" message="No indexes are available" />
                    </options>
                    <validator type="no_options" message="A built-in reference genome is not available for the build associated with the selected input file"/>
                </param>
            </when>
            <when value="history">
                <param name="reference" type="data" format="fasta" label="Using reference file" />
                <param name="reference_fai" type="data" format="fai" label="Index of reference file" />
                <param type="data" name="reference_dict" format="sam" label="Reference Genome dictionary"/>
            </when>
        </conditional>
    </xml>



    <token name="@set_reference_fasta_filename@">
    <![CDATA[
        #set $localfai = 'reference.fa.fai'
        #set $localref = 'reference.fa'
        #set $localdict = 'reference.dict'
        #if $source.index_source == "history":
            ln -s '${source.reference}' '$localref' &&
            ln -s '${source.reference_fai}' '$localfai'  &&
            ln -s '${reference_dict}' '$localdict' &&
        #else
            ln -s '${source.reference.fields.path}' '$localref' &&
            ln -s '${source.reference.fields.path}.fai' '$localfai' &&
            #set $reference_dict = $source.reference.fields.path[:-3] ##remove the .fa
            ln -s '${reference_dict}.dict' '${localdict}' &&
        #end if
        #set $localinput = 'inputdata.bam'
        #set $localbai = 'inputdata.bam.bai'
        ln -s '$input' '$localinput' &&
        ln -s '${input.metadata.bam_index}' '$localbai' &&
        ls -lh &&
    ]]>
    </token>
</macros> 



